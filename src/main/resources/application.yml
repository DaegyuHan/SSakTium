spring:
  profiles:
    active: local
    group:
      local: local, common
      blue: blue, common
      green: green, common

server:
  env: blue

---
spring:
  config:
    activate:
      on-profile: local
  security:
    oauth2:
      client:
        registration:
          kakao:
            redirect-uri: "http://localhost:8080/ssaktium/signin/kakao"
          google:
            redirect-uri: "http://localhost:8080/ssaktium/signin/google"
          naver:
            redirect-uri: "http://localhost:8080/ssaktium/signin-naver"
server:
  port: 8080
  serverAddress: localhost
serverName: local_server

---
spring:
  config:
    activate:
      on-profile: blue
  security:
    oauth2:
      client:
        registration:
          kakao:
            redirect-uri: "http://13.124.138.199/ssaktium/signin/kakao"
          google:
            redirect-uri: "http://13.124.138.199/ssaktium/signin/google"
          naver:
            redirect-uri: "http://13.124.138.199/ssaktium/signin-naver"
server:
  port: 8080
  serverAddress: 13.124.138.199
serverName: blue_server

---
spring:
  config:
    activate:
      on-profile: green
  security:
    oauth2:
      client:
        registration:
          kakao:
            redirect-uri: "http://13.124.138.199/ssaktium/signin/kakao"
          google:
            redirect-uri: "http://13.124.138.199/ssaktium/signin/google"
          naver:
            redirect-uri: "http://13.124.138.199/ssaktium/signin-naver"
server:
  port: 8081
  serverAddress: 13.124.138.199
serverName: green_server
---

spring:
  web:
    resources:
      static-locations: classpath:/static/
  config:
    activate:
      on-profile: common
    import: optional:file:.env[.properties]
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    driver-class-name: com.mysql.cj.jdbc.Driver
    password: ${DB_PASSWORD}
  servlet:
    multipart:
      enabled: true
      max-file-size: 5MB
      max-request-size: 5MB
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            authorization-grant-type: authorization_code
            scope: profile_nickname, account_email, birthyear
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            scope: email, profile, https://www.googleapis.com/auth/user.birthday.read
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            scope: name, email, birthyear

        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response.id

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        use_sql_comments: true
        dialect: org.hibernate.dialect.MySQL8Dialect

jwt:
  secret:
    key: ${JWT_SECRET_KEY}

cloud:
  aws:
    s3:
      bucket: ${S3_BUCKET}
      credentials:
        access-key: ${S3_ACCESS_KEY}
        secret-key: ${S3_SECRET_KEY}
    region:
      static: ap-northeast-2
    stack:
      auto: false

