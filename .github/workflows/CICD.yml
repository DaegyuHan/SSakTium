name: CI/CD

on:
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew clean build

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/ssak:v1 .

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/ssak:v1

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          username: ubuntu
          host: ${{ secrets.SSAKTIUM_SERVER_IP }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script_stop: true
          script: |
            # Pull the latest image from DockerHub
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/ssak:v1
            
            # Stop and remove the existing container if it exists
            if [ "$(sudo docker ps -q -f name=daegyuhan-ssak)" ]; then
              sudo docker stop daegyuhan-ssak
            fi
            
            if [ "$(sudo docker ps -aq -f status=exited -f name=daegyuhan-ssak)" ]; then
              sudo docker rm daegyuhan-ssak
            fi
            
            # Run the new container
            sudo docker run -d --name daegyuhan-ssak -p 8080:8080 \
            --env DB_URL_DEV=${{ secrets.DB_URL_DEV }} \
            --env DB_USERNAME_DEV=${{ secrets.DB_USERNAME_DEV }} \
            --env DB_PASSWORD_DEV=${{ secrets.DB_PASSWORD_DEV }} \
            --env JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }} \
            --env S3_BUCKET=${{ secrets.S3_BUCKET }} \
            --env S3_ACCESS_KEY=${{ secrets.S3_ACCESS_KEY }} \
            --env S3_SECRET_KEY=${{ secrets.S3_SECRET_KEY }} \
            --env GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }} \
            --env GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }} \
            --env KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }} \
            --env NAVER_CLIENT_ID=${{ secrets.NAVER_CLIENT_ID }} \
            --env NAVER_CLIENT_SECRET=${{ secrets.NAVER_CLIENT_SECRET }} \
            ${{ secrets.DOCKERHUB_USERNAME }}/ssak:v1
